{"version":3,"sources":["components/CodeEditor.tsx","components/Preview.tsx","bundler/plugins/fetch-plugin.ts","bundler/index.ts","bundler/plugins/unpkg-path-plugin.ts","pages/CodePage.tsx","utils/defaultCode.ts","components/Menu.tsx","pages/MainPage.tsx","pages/Layout.tsx","utils/theme.ts","App.tsx","index.tsx"],"names":["CodeEditor","initialValue","language","onChange","value","height","width","theme","options","wordWrap","tabSize","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","fontFamily","Preview","codeJS","codeCSS","codeHTML","html","iframe","useRef","useEffect","current","srcdoc","setTimeout","contentWindow","postMessage","style","flexGrow","backgroundColor","minHeight","title","ref","sandbox","srcDoc","fileCache","localForage","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","filter","loader","contents","args","a","getItem","path","cachedResult","axios","get","data","request","escaped","replace","result","resolveDir","URL","responseURL","pathname","setItem","initialized","Builder","rawCode","esbuild","worker","wasmURL","entryPoints","bundle","write","plugins","onResolve","namespace","href","define","global","outputFiles","text","useStyles","makeStyles","root","cell","borderColor","palette","primary","main","border","flex","preview","display","flexDirection","CodePage","defaultCode","js","css","useLocation","classes","useState","inputHTML","setInputHTML","inputCSS","setInputCSS","inputJS","setInputJS","code","setCode","clickHandler","outputJS","timer","clearTimeout","className","Grid","container","direction","justify","item","xs","md","onClick","maxWidth","margin","Menu","Paper","MenuList","MenuItem","to","ListItemIcon","Typography","variant","MainPage","Container","menuButton","marginRight","spacing","wrapper","background","default","Layout","AppBar","position","Toolbar","IconButton","edge","color","aria-label","component","createMuiTheme","type","App","ThemeProvider","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.409f87db.chunk.js","sourcesContent":["import React from 'react'\r\nimport Editor from '@monaco-editor/react'\r\n\r\ninterface CodeEditorProps {\r\n    initialValue?: string\r\n    language: string\r\n    onChange(value: string): void\r\n}\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({\r\n    initialValue = '//shift+alt+f to format',\r\n    language,\r\n    onChange,\r\n}) => {\r\n\r\n    function handleEditorChange(value: string | undefined) {\r\n        if (value) {\r\n            onChange(value)\r\n        }\r\n    }\r\n    return (\r\n\r\n        <Editor\r\n            onChange={handleEditorChange}\r\n            value={initialValue}\r\n            height='100%'\r\n            width='100%'\r\n            theme='vs-dark'\r\n            language={language}\r\n            options={{\r\n                wordWrap: 'on',\r\n                tabSize: 2,\r\n                minimap: {\r\n                    enabled: false,\r\n                },\r\n                showUnused: false,\r\n                folding: false,\r\n                lineNumbersMinChars: 3,\r\n                fontSize: 16,\r\n                scrollBeyondLastLine: false,\r\n                automaticLayout: true,\r\n                fontFamily: 'JetBrains Mono'\r\n                \r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default CodeEditor\r\n","import React, { useRef, useEffect } from 'react'\r\n\r\ninterface PreviewProps {\r\n    codeJS?: string\r\n    codeHTML?: string\r\n    codeCSS?: string\r\n}\r\n\r\nconst Preview: React.FC<PreviewProps> = ({ codeJS, codeCSS, codeHTML }) => {\r\n    const html = `\r\n<html>\r\n  <head>\r\n    <style>\r\n    .animated {\r\n      transform: rotate(45deg);\r\n    }\r\n    body {\r\n      color: rgba(0, 0, 0, 0.87)\r\n      ;\r\n    }\r\n    ${codeCSS}\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <div id=\"root\">${codeHTML}</div>\r\n    <script>\r\n      window.addEventListener('message', (event) => {\r\n          try {\r\n            eval(event.data);\r\n          } catch (err) {\r\n            document.getElementById('root').innerHTML = err\r\n          }\r\n      }, false);\r\n    </script>\r\n  </body>\r\n</html>\r\n`\r\n    const iframe = useRef<any>()\r\n    useEffect(() => {\r\n        iframe.current.srcdoc = html\r\n        setTimeout(() => {\r\n            iframe.current.contentWindow.postMessage(codeJS, '*')\r\n        }, 25)\r\n    }, [codeJS, codeHTML, codeCSS, html])\r\n\r\n    return (\r\n        <iframe\r\n            style={{\r\n                width: '100%',\r\n                flexGrow: 1,\r\n                backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n                minHeight: 500,\r\n            }}\r\n            title=\"q\"\r\n            ref={iframe}\r\n            sandbox=\"allow-scripts\"\r\n            srcDoc={html}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Preview\r\n","import * as esbuild from 'esbuild-wasm'\r\nimport axios from 'axios'\r\nimport localForage from 'localforage'\r\n\r\nconst fileCache = localForage.createInstance({\r\n    name: 'filecache',\r\n})\r\n\r\nexport const fetchPlugin = (inputCode: string) => {\r\n    return {\r\n        name: 'fetch-plugin',\r\n        setup(build: esbuild.PluginBuild) {\r\n            build.onLoad({ filter: /(^index\\.js$)/ }, () => {\r\n                return {\r\n                    loader: 'jsx',\r\n                    contents: inputCode,\r\n                }\r\n            })\r\n\r\n            build.onLoad({ filter: /.css$/ }, async (args: any) => {\r\n                const cachedResult =\r\n                    await fileCache.getItem<esbuild.OnLoadResult>(args.path)\r\n\r\n                if (cachedResult) {\r\n                    return cachedResult\r\n                }\r\n                const { data, request } = await axios.get(args.path)\r\n                const escaped = data\r\n                    .replace(/\\n/g, '')\r\n                    .replace(/\"/g, '\\\\\"')\r\n                    .replace(/'/g, \"\\\\'\")\r\n                const contents = `\r\n                                const style = document.createElement('style');\r\n                                style.innerText = '${escaped}';\r\n                                document.head.appendChild(style);\r\n                                `\r\n\r\n                const result: esbuild.OnLoadResult = {\r\n                    loader: 'jsx',\r\n                    contents,\r\n                    resolveDir: new URL('./', request.responseURL).pathname,\r\n                }\r\n                await fileCache.setItem(args.path, result)\r\n\r\n                return result\r\n            })\r\n\r\n            build.onLoad({ filter: /.*/ }, async (args: any) => {\r\n                const cachedResult =\r\n                    await fileCache.getItem<esbuild.OnLoadResult>(args.path)\r\n\r\n                if (cachedResult) {\r\n                    return cachedResult\r\n                }\r\n                const { data, request } = await axios.get(args.path)\r\n\r\n                const result: esbuild.OnLoadResult = {\r\n                    loader: 'jsx',\r\n                    contents: data,\r\n                    resolveDir: new URL('./', request.responseURL).pathname,\r\n                }\r\n                await fileCache.setItem(args.path, result)\r\n\r\n                return result\r\n            })\r\n        },\r\n    }\r\n}\r\n","import * as esbuild from 'esbuild-wasm'\r\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin'\r\nimport { fetchPlugin } from './plugins/fetch-plugin'\r\n\r\nlet initialized: boolean = false\r\n\r\nconst Builder = async (rawCode: string) => {\r\n    if (!initialized) {\r\n        await esbuild.initialize({\r\n            worker: true,\r\n            wasmURL: 'https://unpkg.com/esbuild-wasm@0.12.8/esbuild.wasm',\r\n        })\r\n        initialized = true\r\n    }\r\n\r\n    const result = await esbuild.build({\r\n        entryPoints: ['index.js'],\r\n        bundle: true,\r\n        write: false,\r\n        plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\r\n        define: {\r\n            'process.env.NODE_ENV': '\"production\"',\r\n            global: 'window',\r\n        },\r\n    })\r\n    return result.outputFiles[0].text\r\n}\r\n\r\nexport default Builder\r\n","import * as esbuild from 'esbuild-wasm';\r\n\r\nexport const unpkgPathPlugin = () => {\r\n  return {\r\n    name: 'unpkg-path-plugin',\r\n    setup(build: esbuild.PluginBuild) {\r\n      // Handle root entry file of 'index.js'\r\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\r\n        return { path: 'index.js', namespace: 'a' };\r\n      });\r\n\r\n      // Handle relative paths in a module\r\n      build.onResolve({ filter: /^\\.+\\// }, (args: any) => {\r\n        return {\r\n          namespace: 'a',\r\n          path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/')\r\n            .href,\r\n        };\r\n      });\r\n\r\n      // Handle main file of a module\r\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\r\n        return {\r\n          namespace: 'a',\r\n          path: `https://unpkg.com/${args.path}`,\r\n        };\r\n      });\r\n    },\r\n  };\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport CodeEditor from '../components/CodeEditor'\r\nimport Preview from '../components/Preview'\r\nimport build from '../bundler'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { htmlDefault, cssDefault, reactDefault } from '../utils/defaultCode'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minHeight: 300,\r\n    },\r\n    cell: {\r\n        borderColor: theme.palette.primary.main,\r\n        border: '3px solid',\r\n        flex: '1 1 100%',\r\n        minHeight: 300\r\n    },\r\n    preview: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n}))\r\n\r\ninterface Code {\r\n    js: string\r\n    css: string\r\n    html: string\r\n}\r\n\r\nconst CodePage: React.FC = () => {\r\n    const defaultCode: Code = {\r\n        js: '//JavaScript',\r\n        css: cssDefault,\r\n        html: '<! -- HTML -->',\r\n    }\r\n    const location = useLocation()\r\n    if (location.pathname === '/vanillajs') {\r\n        defaultCode.html = htmlDefault\r\n    } else {\r\n        defaultCode.js = reactDefault\r\n    }\r\n    const classes = useStyles()\r\n\r\n    const [inputHTML, setInputHTML] = useState(defaultCode.html)\r\n    const [inputCSS, setInputCSS] = useState(defaultCode.css)\r\n    const [inputJS, setInputJS] = useState(defaultCode.js)\r\n    const [code, setCode] = useState<Code>(defaultCode)\r\n\r\n    const clickHandler = async () => {\r\n        const outputJS = await build(inputJS)\r\n        setCode({\r\n            js: outputJS,\r\n            css: inputCSS,\r\n            html: inputHTML,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(async () => {\r\n            const outputJS = await build(inputJS)\r\n            setCode({\r\n                js: outputJS,\r\n                css: inputCSS,\r\n                html: inputHTML,\r\n            })\r\n        }, 750)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [inputJS, inputCSS, inputHTML])\r\n\r\n    return (\r\n        <div className='Page-Wrapper'>\r\n            <Grid\r\n                className={classes.root}\r\n                container\r\n                direction='row'\r\n                justify='center'\r\n            >\r\n                <Grid className={classes.cell} item xs={12} md={3}>\r\n                    <CodeEditor\r\n                        initialValue={defaultCode.html}\r\n                        onChange={value => {\r\n                            setInputHTML(value)\r\n                        }}\r\n                        language='html'\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.cell} item xs={12} md={3}>\r\n                    <CodeEditor\r\n                        initialValue={defaultCode.css}\r\n                        onChange={value => {\r\n                            setInputCSS(value)\r\n                        }}\r\n                        language='css'\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.cell} item xs={12} md={6}>\r\n                    <CodeEditor\r\n                        initialValue={defaultCode.js}\r\n                        onChange={value => {\r\n                            setInputJS(value)\r\n                        }}\r\n                        language='javascript'\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.preview} container direction='column'>\r\n                <Grid className={classes.preview} item xs={12}>\r\n                    <Preview\r\n                        codeJS={code.js}\r\n                        codeCSS={code.css}\r\n                        codeHTML={code.html}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <div>\r\n                <button onClick={clickHandler}>Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CodePage\r\n","\r\nexport const htmlDefault = `<! -- HTML -->\r\n<h1>Hello 🤚</h1>`\r\nexport const cssDefault = `/*CSS*/\r\nh1 {\r\n  text-align: center;\r\n  color:#3f51b5;\r\n}`\r\n\r\nexport const reactDefault = `//JavaScript\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst App = () => {\r\n  return <h1>Hello 🤚</h1>\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))`","import React from 'react'\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DoubleArrowSharpIcon from '@material-ui/icons/DoubleArrowSharp'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 700,\r\n        margin: '50px auto',\r\n    },\r\n})\r\nconst Menu = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            {' '}\r\n            <Paper className={classes.root}>\r\n                <MenuList>\r\n                    <MenuItem>\r\n                        <NavLink to=\"/vanillajs\">\r\n                            <ListItemIcon>\r\n                                <DoubleArrowSharpIcon fontSize=\"small\" />\r\n                            </ListItemIcon>\r\n                            <Typography variant=\"inherit\">\r\n                                Blank template\r\n                            </Typography>\r\n                        </NavLink>\r\n                    </MenuItem>\r\n\r\n                    <MenuItem>\r\n                        <NavLink to=\"/react\">\r\n                            <ListItemIcon>\r\n                                <DoubleArrowSharpIcon fontSize=\"small\" />\r\n                            </ListItemIcon>\r\n                            <Typography variant=\"inherit\">\r\n                                React template\r\n                            </Typography>{' '}\r\n                        </NavLink>\r\n                    </MenuItem>\r\n                </MenuList>\r\n            </Paper>\r\n            <Paper className={classes.root}></Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import { Container } from '@material-ui/core'\r\nimport Menu from '../components/Menu'\r\nimport React from 'react'\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <Container >\r\n            <Menu />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport CodePage from './CodePage'\r\nimport MainPage from './MainPage'\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    wrapper: {\r\n        backgroundColor: theme.palette.background.default,\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n}))\r\n\r\nconst Layout = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        CodeHere\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Switch>\r\n                <Route path=\"/vanillajs\" component={CodePage} />\r\n                <Route path=\"/react\" component={CodePage} />\r\n                <Route path=\"/codehere\" component={MainPage} />\r\n                <Route path=\"/\" component={MainPage} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n})\r\n\r\nexport default theme\r\n","import React from 'react'\r\nimport { BrowserRouter as Router} from 'react-router-dom'\r\nimport Layout from './pages/Layout'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport theme from './utils/theme'\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <Router>\r\n            <ThemeProvider theme={theme}>\r\n                <Layout />\r\n            </ThemeProvider>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './styles.css'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))\r\n"],"sourceRoot":""}